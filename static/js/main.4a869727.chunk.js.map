{"version":3,"sources":["components/Header.jsx","action-creatons/list-action-creators.js","components/AddCardForm.jsx","components/AddNewCard.jsx","utils.js","dragndrop/item-types.js","components/Card.jsx","components/List.jsx","components/Main.jsx","App.jsx","reducers/listsReducer.js","data.js","reducers/index.js","store/index.js","index.js"],"names":["Header","className","addCard","card","dispatch","type","payload","doneCard","id","deleteCard","dropCard","info","AddCardForm","setOpenForm","listId","useDispatch","bindActionCreators","actionCreators","defaultCard","title","description","theme","importance","done","useState","newCard","setNewCard","resetForm","evt","currentTarget","classList","contains","reset","onSubmit","preventDefault","Date","now","htmlFor","onChange","target","value","name","minLength","placeholder","required","onClick","width","height","viewBox","fill","xmlns","d","AddNewCard","openForm","getStylesForCard","setBackgroundColor","classname","color","style","backgroundColor","ItemTypes","Card","listLength","ref","useRef","useDrop","accept","drop","dragItem","monitor","collect","isOver","shallow","useDrag","item","isDragging","drag","fillRule","clipRule","propType","PropTypes","shape","number","isRequired","string","bool","List","list","listTitle","cards","onDragOver","onDragOverHandler","onDragLeave","dragLeaveHandler","onDragEnd","dragEndHandler","onDrop","dropCardHandler","map","Main","tracker","useSelector","state","length","App","initialState","listsReducer","action","cardDone","filter","dragCard","dropIndex","dragListIndex","indexOf","find","dragList","dropListIndex","dropList","splice","reducers","combineReducers","listReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.4a869727.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 className=\"header\">Roadmap</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","export const addCard = (card) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'ADD_CARD',\r\n      payload: card\r\n    })\r\n  }\r\n}\r\n\r\nexport const doneCard = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'DONE_CARD',\r\n      payload: id\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteCard = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'DELETE_CARD',\r\n      payload: id\r\n    })\r\n  }\r\n}\r\n\r\nexport const dropCard = (info) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'DROP_CARD',\r\n      payload: info\r\n    })\r\n  }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionCreators from '../action-creatons/list-action-creators';\r\n\r\n\r\nconst AddCardForm = ({setOpenForm, listId}) => {\r\n\r\n  const dispatch = useDispatch();                                   \r\n  const { addCard } = bindActionCreators(actionCreators, dispatch); \r\n\r\n  const defaultCard = {\r\n    id: null,\r\n    title: '',\r\n    description: '',\r\n    theme: '',\r\n    importance: false,\r\n    done: false,\r\n  }\r\n\r\n  const [newCard, setNewCard] = useState(defaultCard);\r\n\r\n  const resetForm = (evt) => {\r\n    if (evt.currentTarget.classList.contains('new_card_form')) {\r\n      evt.currentTarget.reset();\r\n    }\r\n    \r\n    setNewCard(defaultCard);\r\n    setOpenForm(false);\r\n  }\r\n\r\n  const submitForm = (evt) => {\r\n    evt.preventDefault();\r\n    addCard({id: listId, card: {...newCard, id: Date.now()}});\r\n    resetForm(evt);\r\n  }\r\n\r\n  return (\r\n    <form className=\"new_card_form\" onSubmit={submitForm}>\r\n      <article className=\"card form\">\r\n        <h3 className=\"card_title\">\r\n          <label htmlFor=\"title\"/>\r\n          <input \r\n            onChange={evt => setNewCard({...newCard, title: evt.target.value})}\r\n            type=\"text\" \r\n            id=\"title\" \r\n            name=\"card_title\" \r\n            minLength=\"1\" \r\n            placeholder=\"title\" \r\n            required\r\n          />\r\n        </h3>\r\n        <p className=\"card_text\">\r\n          <label htmlFor=\"text\"/>\r\n          <textarea \r\n            onChange={evt => setNewCard({...newCard, description: evt.target.value})}\r\n            type=\"text\" \r\n            id=\"text\" \r\n            name=\"card_text\" \r\n            placeholder=\"description\" \r\n          ></textarea>\r\n        </p>\r\n        <div className=\"card_bottom_wrap\">\r\n          <p className=\"card_theme\">\r\n            <label htmlFor=\"theme\"/>\r\n            <input \r\n              onChange={evt => setNewCard({...newCard, theme: evt.target.value})}\r\n              type=\"text\" \r\n              id=\"theme\" \r\n              name=\"card_theme\" \r\n              placeholder=\"theme\"\r\n            />\r\n          </p>\r\n          <button \r\n            onClick={evt => setNewCard({...newCard, importance: !newCard.importance})}\r\n            type=\"button\" \r\n            className={newCard.importance ? \"is_important button--important\" : \"is_important\"}\r\n          >\r\n            <svg width=\"30\" height=\"30\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M10 19C14 19 16.5 15.1026 16.5 12.1795C16.5 6.82051 12.5 2.92308 9.5 0C10.5 2.4359 10.4484 7.34994 7 10.2308C6 9.25641 6.5 6.33333 7 5.84615C5.5 6.33333 3 8.28205 3 12.1795C3 16.0769 6 19 10 19Z\"\r\n                fill=\"#262626\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"form_buttons_wrap\">\r\n          <button type=\"submit\">add</button>\r\n          <button onClick={resetForm} type=\"reset\">cancel</button>\r\n        </div>\r\n      </article>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCardForm.propTypes = {\r\n  setOpenForm: PropTypes.func.isRequired,\r\n  listId: PropTypes.number.isRequired\r\n}\r\n\r\nexport default AddCardForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddNewCard = ({openForm, setOpenForm}) => {\r\n\r\n\r\n  return (\r\n    <button \r\n      onClick={() => setOpenForm(!openForm)} \r\n      className={openForm ? 'hidden' : 'new_card'} \r\n      type=\"button\" \r\n    >\r\n      + add new card\r\n    </button>\r\n  );\r\n}\r\n\r\nAddNewCard.propTypes = {\r\n  openForm: PropTypes.bool.isRequired, \r\n  setOpenForm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddNewCard;","export const getStylesForCard = (done, importance) => {\r\n  if (done) {\r\n    return 'card card--unactive';\r\n  } else if (importance) {\r\n    return 'card card--important';\r\n  } else {\r\n    return 'card';\r\n  }\r\n}\r\n\r\nexport const setBackgroundColor = (evt, classname, color) => {\r\n  if (evt.currentTarget.classList.contains(classname)) {\r\n    evt.currentTarget.style.backgroundColor = color;\r\n  }\r\n}","export const ItemTypes = {\r\n  CARD: 'card'\r\n}","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getStylesForCard } from '../utils';\r\nimport * as actionCreators from '../action-creatons/list-action-creators';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../dragndrop/item-types';\r\n\r\n\r\nconst Card = ({ card, listId, listLength }) => {\r\n\r\n  const dispatch = useDispatch(); \r\n  const { doneCard, deleteCard, dropCard } = bindActionCreators(actionCreators, dispatch); \r\n\r\n  const {id, title, description, theme, done, importance} = card;\r\n\r\n  const ref = useRef(null);\r\n\r\n  const [{isOver}, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    drop: (dragItem, monitor) => {\r\n      if (id === dragItem.id) {\r\n        return;\r\n      }\r\n      // проверка, если доска не пустая\r\n      if (listLength) {\r\n        dropCard({id, listId, dragItem})\r\n      }\r\n    }, \r\n    collect: (monitor) => {      \r\n      return {\r\n        isOver: monitor.isOver({ shallow: true }),      \r\n      }\r\n    }\r\n  })\r\n  \r\n  const [{isDragging}, drag] = useDrag({\r\n    type: ItemTypes.CARD,\r\n    item: () => {\r\n      return {id, listId};\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  })\r\n  \r\n  drag(drop(ref));\r\n  \r\n  return (\r\n    <article \r\n      ref={ref}\r\n      className={getStylesForCard(done, importance)} \r\n    >\r\n      <h3 className=\"card_title\">{title}</h3>\r\n      <p className=\"card_text\">{description}</p>\r\n      <div className=\"card_bottom_wrap\">\r\n        {theme ? <p className=\"card_theme\">{theme}</p> : null}\r\n        \r\n        {done ? \r\n            <button type=\"button\" onClick={() => deleteCard(id)} className=\"card_check\">\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16 7V17C16 18.1046 15.1046 19 14 19H6C4.89543 19 4 18.1046 4 17V7L2 7V3H6.5L7.44721 1.10557C7.786 0.428005 8.47852 0 9.23607 0H10.7639C11.5215 0 12.214 0.428004 12.5528 1.10557L13.5 3H18V7L16 7ZM17 4V6L3 6V4H7.11803L8.34164 1.55279C8.51103 1.214 8.8573 1 9.23607 1H10.7639C11.1427 1 11.489 1.214 11.6584 1.55279L12.882 4H17ZM5 17C5 17.5523 5.44772 18 6 18H14C14.5523 18 15 17.5523 15 17V7H5V17Z\" fill=\"white\"/>\r\n              </svg> \r\n            </button>\r\n          :\r\n            <button type=\"button\" onClick={() => doneCard(id)} className=\"card_check\">\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path id=\"check_icon\" fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                d=\"M24 2.62787L9.54844 19.3028L0 9.75432L2.83722 6.91709L9.33855 13.4184L20.9678 0L24 2.62787Z\" fill=\"white\" />\r\n              </svg> \r\n            </button>\r\n          }\r\n\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nCard.propType = {\r\n  card: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    theme: PropTypes.string.isRequired,\r\n    importance: PropTypes.bool.isRequired,\r\n    done: PropTypes.bool.isRequired,\r\n  }).isRequired, \r\n  listId: PropTypes.number.isRequired,\r\n  listLength: PropTypes.number.isRequired\r\n}\r\n\r\n\r\nexport default Card;","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddCardForm from './AddCardForm';\r\nimport AddNewCard from './AddNewCard';\r\nimport Card from './Card';\r\nimport { setBackgroundColor } from '../utils';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionCreators from '../action-creatons/list-action-creators';\r\nimport { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../dragndrop/item-types';\r\n\r\nconst List = ({ list, listLength }) => { \r\n\r\n  const dispatch = useDispatch();\r\n  const { dropCard } = bindActionCreators(actionCreators, dispatch); \r\n\r\n  const {listTitle, cards, id} = list;\r\n\r\n  const [openForm, setOpenForm] = useState(false);\r\n\r\n\r\n  const onDragOverHandler = (evt) => {\r\n    evt.preventDefault();\r\n    setBackgroundColor(evt, 'list_wrap', '#686868')    \r\n  }\r\n\r\n  const dragLeaveHandler = (evt) => {\r\n    setBackgroundColor(evt, 'list_wrap', '#353535d2');    \r\n  }\r\n\r\n  const dragEndHandler = (evt) => {\r\n    setBackgroundColor(evt, 'list_wrap', '#353535d2');    \r\n  }\r\n  \r\n  const dropCardHandler = (evt, list) => {\r\n    setBackgroundColor(evt, 'list_wrap', '#353535d2');    \r\n  }\r\n  const ref = useRef(null);\r\n\r\n  const [{isOver}, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    drop: (dragItem, monitor) => {\r\n      if (id === dragItem.id) {\r\n        return;\r\n      }\r\n      //проверка, если доска пустая\r\n      if (!listLength) {\r\n        const listId = id;\r\n        dropCard({listId, dragItem})\r\n      }\r\n    }, \r\n    collect: (monitor) => {      \r\n      return {\r\n        isOver: monitor.isOver({ shallow: true }),      \r\n      }\r\n    }\r\n  })\r\n\r\n  drop(ref);\r\n\r\n  return (\r\n    <section \r\n      ref={ref}\r\n      className=\"list_wrap\" \r\n      onDragOver={(evt) => onDragOverHandler(evt)}\r\n      onDragLeave={(evt) => dragLeaveHandler(evt)}\r\n      onDragEnd={(evt) => dragEndHandler(evt)}\r\n      onDrop={(evt) => dropCardHandler(evt)}\r\n    >\r\n\r\n      <h2 className=\"list_title\">{listTitle}</h2>\r\n      \r\n      {cards.map((card) => { \r\n        return <Card \r\n          key={card.id} \r\n          listLength={listLength}\r\n          card={card} \r\n          listId={id}\r\n        />\r\n      })}\r\n      \r\n      <AddNewCard openForm={openForm} setOpenForm={setOpenForm} />\r\n\r\n      {openForm && \r\n        <AddCardForm setOpenForm={setOpenForm} listId={id}/>\r\n      }\r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  list: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    listTitle: PropTypes.string.isRequired,\r\n    cards: PropTypes.array.isRequired\r\n  }).isRequired,\r\n  listLength: PropTypes.number.isRequired\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport List from './List';\r\n\r\nconst Main = () => {\r\n  const tracker = useSelector((state) => state.list);\r\n\r\n  return (\r\n    <main className=\"page_wrap\">\r\n      {tracker.map(list => {\r\n        return <List \r\n          key={list.id} \r\n          list={list}\r\n          listLength={list.cards.length}\r\n        />\r\n      })} \r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nconst App = () => {\n\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import { data } from \"../data\";\r\n\r\nconst initialState = data;\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_CARD':\r\n      return state.map(list => {\r\n        if (list.id === action.payload.id) {\r\n        list.cards = [action.payload.card, ...list.cards ];\r\n        }\r\n        return list;\r\n      })\r\n\r\n    case 'DONE_CARD':\r\n      return state.map(list => {\r\n        let cardDone;\r\n        \r\n        list.cards = list.cards.map(card => {\r\n          if (card.id === action.payload) {\r\n            cardDone = card;\r\n            cardDone.done = true;\r\n          }\r\n          return card;\r\n        })\r\n\r\n        if (cardDone) {\r\n          list.cards = list.cards.filter(card => card !== cardDone);\r\n          list.cards = [...list.cards, cardDone];\r\n        }\r\n        return list;\r\n      })\r\n\r\n    case 'DELETE_CARD':\r\n      return state.map(list => {\r\n        list.cards = list.cards.filter(card => card.id !== action.payload);\r\n        return list;\r\n        });\r\n    \r\n    case 'DROP_CARD':\r\n        let { id, listId, dragItem } = action.payload;\r\n        \r\n        let dragCard, dropCard, dropIndex;\r\n\r\n        const dragListIndex = state.indexOf(state.find(list => {\r\n          dragCard = list.cards.find(card => card.id === dragItem.id)\r\n          return list.id === dragItem.listId\r\n        }));\r\n        const dragList = state[dragListIndex].cards.filter(card => card.id !== dragItem.id);\r\n\r\n        \r\n        const dropListIndex = state.indexOf(state.find(list => {\r\n          dropCard = list.cards.find(card => card.id === id);\r\n          dropIndex = list.cards.indexOf(dropCard);\r\n          return list.id === listId\r\n        }));\r\n        const dropList = state[dropListIndex].cards;\r\n        dropList.splice(dropIndex, 0, dragCard);\r\n        \r\n        if (dragItem.listId === listId) {\r\n          dragList.splice(dropIndex, 0, dragCard);\r\n        }\r\n\r\n        return state.map(list => {\r\n          if (list.id === listId) {\r\n            list.cards = dropList;\r\n          }\r\n          if (list.id === dragItem.listId) {\r\n            list.cards = dragList;\r\n          }\r\n          return list;\r\n        })\r\n\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default listsReducer;","// ДАННЫE ДЛЯ КАРТОЧЕК\r\n\r\nconst data = [\r\n  { \r\n    id: 1,\r\n    listTitle: 'Backlog',\r\n    cards: [\r\n      {\r\n        id: 11,\r\n        title: 'Twilio integration',\r\n        description: 'Create new note via SMS. Support text, audio, links, and media.',\r\n        theme: '',\r\n        importance: false,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 12,\r\n        title: 'Markdown support',\r\n        description: 'Markdown shorthand converts to formatting',\r\n        theme: 'Formatting',\r\n        importance: false,\r\n        done: false,\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    listTitle: 'To do',\r\n    cards: [\r\n      {\r\n        id: 21,\r\n        title: 'Tablet view',\r\n        description: '',\r\n        theme: '',\r\n        importance: true,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 22,\r\n        title: 'Audio recording in note',\r\n        description: 'Show audio in a note and playback UI',\r\n        theme: 'Note interface',\r\n        importance: false,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 23,\r\n        title: 'Bookmark in note',\r\n        description: 'Show rich link UI in a note, and feature to render website screenshot.',\r\n        theme: 'Note interface',\r\n        importance: false,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 24,\r\n        title: 'Image viewer',\r\n        description: 'Opens when clicking on the thumbnail in the list or on the image in the note',\r\n        theme: '',\r\n        importance: false,\r\n        done: false,\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    listTitle: 'In progress',\r\n    cards: [\r\n      {\r\n        id: 31,\r\n        title: 'Mobile view',\r\n        description: 'Functions for both web responsive and native apps. Note: Android and iOS will need unique share icons.',\r\n        theme: '',\r\n        importance: true,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 32,\r\n        title: 'Desktop view',\r\n        description: 'PWA for website and native apps. Note: Windows and Mac will need unique share icons.',\r\n        theme: '',\r\n        importance: true,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 33,\r\n        title: 'Formatting options',\r\n        description: 'Mobile formatting bar expands and collapses when tapping the format icon.',\r\n        theme: '',\r\n        importance: false,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 34,\r\n        title: 'Media in note',\r\n        description: 'Image & video with player UI',\r\n        theme: 'Note interface',\r\n        importance: false,\r\n        done: false,\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    listTitle: 'Designed',\r\n    cards: [\r\n      {\r\n        id: 41,\r\n        title: 'Audio recording',\r\n        description: 'Interface for when recording a new audio note',\r\n        theme: 'New note',\r\n        importance: false,\r\n        done: false,\r\n      },\r\n      {\r\n        id: 42,\r\n        title: 'Bookmarking',\r\n        description: 'Interface for when creating a new link note.',\r\n        theme: 'New note',\r\n        importance: false,\r\n        done: false,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport { data };","import { combineReducers } from \"redux\";\r\nimport listReducer from \"./listsReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  list: listReducer\r\n})\r\n\r\nexport default reducers;","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n  )","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <DndProvider backend={HTML5Backend}>\n      <App />\n    </DndProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}